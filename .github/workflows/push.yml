on: push
name: Build and test
jobs:
  go-version:
    name: Lookup go versions
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.go-version.outputs.latest }}
      matrix: ${{ steps.go-version.outputs.matrix }}
      module: ${{ steps.go-version.outputs.module }}
    steps:
    - uses: actions/checkout@v3
    - uses: arnested/go-version-action@v1
      id: go-version
  go_generate:
    name: Check generated code is up to date
    needs: go-version
    runs-on: ubuntu-latest
    env:
      workdir: go/src/${{ needs.go-version.outputs.module }}
    steps:
    - uses: actions/checkout@v3
      with:
        path: ${{env.workdir}}
    - name: Install Go ${{ needs.go-version.outputs.latest }}.x
      uses: WillAbides/setup-go-faster@v1.10.1
      with:
        go-version: ${{ needs.go-version.outputs.latest }}.x
        ignore-local: true
    - name: Go version
      run: go version
    - name: go generate
      env:
        GO111MODULE: 'on'
        GOPATH: ${{ github.workspace }}/go
      working-directory: ${{env.workdir}}
      run: go generate -x
    - name: Diff after go generate
      working-directory: ${{env.workdir}}
      run: git diff --exit-code
    - name: Determine next version
      working-directory: ${{env.workdir}}
      run: |
        go install golang.org/x/exp/cmd/gorelease@latest
        gorelease
  build_and_test:
    name: Build and test
    needs: go-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ${{ fromJSON(needs.go-version.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v3
    - name: Install Go ${{ matrix.go-version }}.x
      uses: WillAbides/setup-go-faster@v1.10.1
      with:
        go-version: ${{ matrix.go-version }}.x
        ignore-local: true
    - name: Go version
      run: go version
    - name: go test
      env:
        GO111MODULE: 'on'
      run: go test -v -race -cover -covermode=atomic -coverprofile=coverage.txt ./...
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: go${{ matrix.go-version }}
