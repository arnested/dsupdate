on: push
name: Build and test
jobs:
  go_generate:
    name: Check generated code is up to date
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    env:
      workdir: go/src/arnested.dk/go/dsupdate
    steps:
    - uses: actions/checkout@v2.3.1
      with:
        path: ${{env.workdir}}
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.13'
    - name: go generate
      env:
        GO111MODULE: 'on'
        GOPATH: ${{ github.workspace }}/go
      working-directory: ${{env.workdir}}
      run: go generate -x
    - name: Diff after go generate
      working-directory: ${{env.workdir}}
      run: git diff --exit-code
  build_and_test:
    name: Build and test
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.13', '1.14', '1.15']
    steps:
    - uses: actions/checkout@v2.3.1
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: go test
      env:
        GO111MODULE: 'on'
      run: go test -v -race -cover -covermode=atomic -coverprofile=coverage.txt ./...
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v1.1.1
      with:
        flags: go${{ matrix.go-version }}
        token: ${{secrets.CODECOV_TOKEN}}
  license_check:
    name: License check
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.1
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.13'
    - name: Install wwhrd
      env:
        GO111MODULE: 'off'
      run: go get -u github.com/frapposelli/wwhrd
    - name: go mod vendor
      env:
        GO111MODULE: 'on'
      run: go mod vendor
    - name: wwhrd check
      run: wwhrd check
